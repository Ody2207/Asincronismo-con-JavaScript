## ¿Qué es el asincronismo?

        "Los lenguajes de programacion son sincronos"

        Esto quiere decir que un lenguaje de programación solamente puede 
        ejecutar un problema a la vez

        JavaScript es sincrono por defecto y tiene un sobproceso

        "JavaScript es síncrono y no bloqueante, con un bucle de eventos 
        (concurrencia), implementando con un único hilo para sus interfaces de I/O"

## Single-threaded 

    Aún con múltiples procesasores solo puede ejecutar tareas en un solo hilo, llamado 
    hilo principal 

## Bloqueante

    Una tarea no devuelve el control hasta que se ha completado 

## No bloqueante

    Una tarea se devuelve inmediatamente con independencia del resultado. Si se 
    completó, devuelve los datos. Si no, un error.

## Síncrono

    La tarea se ejecutan de forma secuencial, se debe esperar a que se complete para 
    continuar con la siguiente tarea 

## Concurrencia en JavaScript

    Utiliza un modelo de concurrencia basado en un "loop de eventos"

## Event Loop

    El buble de eventos es un patrón de diseño que espera y destribuye eventos o 
    mensajes en un programa.

## Callbacks

    Una función que se pasa como argumentos de otra función y que será invocada 

## Promesas (ES6)

    función no-bloqueante y asíncrona la cual puede retornar 
    un valor ahora, en el futuro o nunca.

## Async / Await (ES2017)

    Permite estructurar una función asincróna sin bloqueo de una manera 
    similar a una función sincrónica ordinaria 

JavaScript es: asíncrono y no bloqueante, con un bule de eventos (concurrencia)
implementado con un único hilo para sus interfaces de I/O

